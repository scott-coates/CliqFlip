@using CliqFlip.Web.Mvc.ViewModels.Search
@model UsersByInterestViewModel


@helper GetCssClass(int interestsWithImages)
{
    string cssClass = "";
    switch (interestsWithImages)
    {
        case 1:
            cssClass = "one-interest";
            break;
        case 2:
            cssClass = "two-interests";
            break;
        case 3:
            cssClass = "three-interests";
            break;
        case 4:
            cssClass = "four-interests";
            break;
    }
	@cssClass
}

@helper DisplayUserInterests(UsersByInterestViewModel.IndividualResultViewModel user)
{
    var maxInterests = 4;
    var interests = user.ResultInterestViewModels.ToList();
	<div class="userSearchInterest">
        <ul class="interest-slider">
        @while (interests.Any())
        {
            var currentSet = interests.Take(maxInterests).ToList();// work with 4 interests at a time
            <li>
                @foreach (var interest in currentSet)
                {
                    interests.Remove(interest);
					<div class="@GetCssClass(currentSet.Count)">
						@interest.InterestName<br />
                        @if (interest.DefaultImageUrl != null)
                        {
							<img alt="photo" src='@interest.DefaultImageUrl'/>
                        }
					</div>
                }
            </li>
        }
        </ul>
	</div>
}

@if (Model.Results.Count > 0)
{
	<div id="userSearchResults">
		@foreach (var user in Model.PagedResults)
        {
			<div class="innerUserSearchResults">
				<h3>
					<div>
						<img class="innerResultPhoto profile-image" alt="photo" src='@user.ImageUrl'/>
					</div>
					<div>
						@user.Headline
					</div>
					@Html.ActionLink("- " + user.Name, "Index", "User", new { username = @user.Name }, new { @class = "user-profile" })
				</h3>
                
                @DisplayUserInterests(user)

				<div class="userSearchBio">
					@user.Bio
				</div>
				<div class="clear">
				</div>
			</div>
        }
		<div class="clear">
		</div>
		<div id="userSearchPaging">
			@Html.Raw(Html.Pager(Model.PagedResults).ToString())
		</div>
		<div class="tryout">
			@{ Html.RenderAction("InterestSearch", "Search"); }
		</div>
	</div>
}
else
{
	<div class="tryout">
		<div class="header">
			Sorry, no results were found for this query
		</div>
		<div class="subheader">
			Please try one of the popular terms below</div>
		@{ Html.RenderAction("InterestSearch", "Search"); }
	</div>
}


@Bundles.RenderScripts(@<text>)
@section beforeBodyClose
{
	
	<script type="text/javascript">
	    $(document).ready(function () {
	        InitSearchPage();

	        InitAutoSuggest('@(Html.Raw(Url.Action("Interest", "Search")))');

	        InitTagCloud();

	        ChangeSearchQueryParamName();
	    });
	</script>
}