@model CliqFlip.Web.Mvc.ViewModels.User.UserCreateViewModel
@{
	ViewBag.Title = "Create";
}
<div id="steps">
</div>
@using (Html.BeginForm("Create", "User", FormMethod.Post, new { id = "formProfileCreate", @class = "ui-formwizard" }))
{
	@Html.ValidationSummary(true)

	<fieldset class="step ui-formwizard-content" id="stepInterests">
		@{ Html.RenderPartial("_AddInterest"); }
	</fieldset>
	<fieldset class="step ui-formwizard-content" style="display: none;" id="stepLogin">
		<strong>Login</strong>
		<div>
			<div class="editor-label">
				@Html.LabelFor(model => model.Username)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Username)
				@Html.ValidationMessageFor(model => model.Username)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.Email)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Email)
				@Html.ValidationMessageFor(model => model.Email)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.ZipCode)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.ZipCode)
				@Html.ValidationMessageFor(model => model.ZipCode)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.Password)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Password)
				@Html.ValidationMessageFor(model => model.Password)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.PasswordVerify)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.PasswordVerify)
				@Html.ValidationMessageFor(model => model.PasswordVerify)
			</div>
			<div class="editor-label">
				<a href="javascript:void(0);" id="tos-link">Accept Terms & Conditions</a>
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.AcceptTermsAndConditions)
				@Html.ValidationMessageFor(model => model.AcceptTermsAndConditions)
			</div>
		</div>
	</fieldset>

	<div class="clear">
	</div>
	<p id="button-container">
		<input type="submit" value="Next" class="button dark-blue" />
		<input type="reset" value="Back" class="button blue" />
	</p>
}
<script id="tmplStepIndicator" type="text/x-jquery-tmpl">
	<div>
		<a href="#${StepId}" class="button blue">
			<strong>${StepNumber}</strong> - ${StepTitle}
		</a>
	</div>
</script>
<div class="user-create-tos" id="create-tos">
	<ol>
		<li>Don’t Spam the site, don’t spam the users.  Or else you’re gonna get canned.  Pun intended.</li>
		<li>Don’t post porn or violence.  There’s a place for that and it’s called HBO.</li>
		<li>Don’t steal stuff off the site. </li>
		<li>We reserve the right to give you the boot for any or no reason.  But we won’t unless you’re being an idiot.</li>
		<li>We’re not liable for anything.  Stuff you post and where you go is your liability. Why do you think we’re an LLC?  LIMITED LIABILITY.  In this case limited = none.</li>
		<li>We’re not going to sell all your secret info like the “other guys.”  Your secret’s safe with us.</li>
		<li>Do unto others and you would have them do unto you.  Just a good life rule.</li>
		<li>Help us, help you.  We’re building a better way to meet and connect with people.  Tell us what works and what doesn’t, we value your input.</li>
	</ol>
	<p>(Big Boy Terms of Service coming soon but this will be the gist of it.)</p>
</div>

@section beforeBodyClose
{
	<script type="text/javascript" src="@Url.Content("/Content/js/jquery.tmpl.js")"> </script>
	<script type="text/javascript" src="@Url.Content("/Content/js/jquery.form.wizard.js")"> </script>
	<script type="text/javascript" src="@Url.Content("/Content/js/user/create.js")"> </script>
	<script type="text/javascript" src="@Url.Content("/Content/js/user/add-interest.js")"> </script>
	<script type="text/javascript" src="@Url.Content("/Content/js/validation/jquery.validate.must-be-true.js")"> </script>
	<script type="text/javascript">

		$(document).ready(function () {
			InitUserCreate();
			InitAddInterest();
		});
	</script>
}
